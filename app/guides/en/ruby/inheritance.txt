La herencia de clases es un mecanismo por el cual se heredan las características y ciertos comportamientos de otra clase. La clase de la cual se hereda se denomina superclase o clase padre. La clase que hereda se llama subclase o clase hija.

Luego de esta breve introducción vamos a ver un ejemplo de herencia.

    class Mamifero 

      def correr
        puts 'corroo!'
      end 

      def nadar
        puts 'Estoy nadando!'
      end

    end

    class Perro < Mamifero

      def ladrar
        puts 'Guau Guau'
      end

    end

Como estamos heredando la clase Mamifero, entonces el perro podría correr también, es como decir *Un perro es un mamífero*

    p = Perro.new
    p.ladrar
    p.correr

<br />
** Sobreescritura de métodos**

    class Elefante < Mamifero

      def nadar
        puts 'No puedo nadar =('
      end

    end

    e = Elefante.new
    e.nadar # No puedo nadar

En este caso, se ha sobreescrito el método nadar y por lo tanto el comportamiento ha sido modificado.

<br/>
**Usando super**

**super** es una palabra reservada y cuando es usado dentro de un método, lo que hace Ruby es buscar un método con el mismo nombre en la clase padre. Aquí un ejemplo.

    class Vehiculo
      attr_reader :marchas, :ruedas, :asientos # se hablará de attr_reader
      def initialize(marchas = 1)
        @ruedas = 2
        @asientos = 1
        @marchas = marchas
      end

    end
     
    class Auto < Vehiculo
      def initialize()
        super(4)
        @asientos = 2
      end
    end

    t = Tandem.new()
    b = Bicicleta.new(4)

    puts b.marchas # 4

Estamos modificando el valor del atributo *marchas* a 4 en la clase padre ;)